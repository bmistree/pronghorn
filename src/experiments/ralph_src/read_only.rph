#include 'iapplication.rph'
alias Interface IApplication as 'pronghorn.IApplicationJava.IApplication';

#include 'instance.rph'
alias Service Instance as 'pronghorn.InstanceJava.Instance';

#include 'wrapped_switch.rph'
alias Struct StructWrappedSwitch as 'pronghorn.WrappedSwitchJava.StructWrappedSwitch';

Service ReadOnly implements Interface IApplication
{
    Service Instance inst = null;
    
    // @Override --- from IApplication interface
    init(Service Instance inst_)
    {
        inst = inst_;
    }

    // @Override --- do nothing when first installed
    run()
    {}

    read_first_instance_flow_table()
    {
        atomically
        {
            Map(from: Text, to: Struct StructWrappedSwitch) switch_map;
            switch_map = inst.get_switch_map();

            for (Text switch_id in switch_map)
            {
                Struct StructWrappedSwitch sws = switch_map.get(switch_id);
                sws.wrapped_switch.ftable_size();
                break;
            }
        }
    }
}

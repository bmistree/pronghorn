#include 'iapplication.rph'
alias Interface IApplication as 'pronghorn.IApplicationJava.IApplication';

#include 'instance.rph'
alias Service Instance as 'pronghorn.InstanceJava.Instance';


#include 'wrapped_switch.rph'
alias Struct StructWrappedSwitch as 'pronghorn.WrappedSwitchJava.StructWrappedSwitch';


Service OffOnApplication implements Interface IApplication
{
    Service Instance inst = null;
    TVar TrueFalse installed = False;
    TVar TrueFalse blocking_all = False;
    TVar Map(from: Text, to: Struct StructWrappedSwitch) switch_map;
    
    // override from IApplication interface
    init(Service Instance inst_,
        TVar Map(from: Text, to: Struct StructWrappedSwitch) switch_map_)
    {
        inst = inst_;
        switch_map = switch_map_;
    }

    // do nothing when first installed
    run()
    {
        installed = True;
    }

    change_switches()
    {
        atomically
        {
            if (blocking_all)
            {
                for (Text switch_id in switch_map)
                {
                    Struct StructWrappedSwitch sws = switch_map.get(switch_id);

                    Number switch_ftab_size = sws.wrapped_switch.ftable_size();
                    print ('\nSize of ftable: ');
                    print (switch_ftab_size);
                    print ('\n');
                }
            }
            blocking_all = not blocking_all;
        }
    }
}

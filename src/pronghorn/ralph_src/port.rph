Struct Port
{
    // Not making these tvars because expectation is that these are
    // write-once variables.
    Text local_switch_id = null;
    Number local_port_number = null;

    Text remote_switch_id = null;
    Number remote_port_number = null;

    // User's modulating bringing the link between two switches down
    // or bring it up.  True if port is up, false if it is not.
    TVar TrueFalse port_up = null;

    // If have two, connected switches join the network
    // simultaneously, then when one comes up it will announce all of
    // its ports, including a connection to a switch that does not yet
    // exist in the network.  In this case, user should not be able to
    // change any of the port's 
    TVar TrueFalse other_end_available = null;
}

Service PortUtil
{
    copy (Struct Port to_copy) returns Struct Port
    {
        Struct Port to_return;
        to_return.local_switch_id = to_copy.local_switch_id;
        to_return.local_port_number = to_copy.local_port_number;
        to_return.remote_switch_id = to_copy.remote_switch_id;
        to_return.remote_port_number = to_copy.remote_port_number;
        to_return.port_up = to_copy.port_up;
        to_return.other_end_available = to_copy.other_end_available;
        
        return to_return;
    }    
}

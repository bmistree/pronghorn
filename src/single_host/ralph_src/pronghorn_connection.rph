alias Endpoint PronghornInstance as 'single_host.JavaPronghornInstance.PronghornInstance';

Endpoint PronghornConnection
{
    Endpoint PronghornInstance service;

    set_service(Endpoint PronghornInstance to_set_to)
    {
        service = to_set_to;
    }

    // called from service
    single_op_and_ask_children_for_single_op()
    {
        @partner.receive_single_op_and_ask_children_for_single_op();
    }

    // called exclusively from partner
    receive_single_op_and_ask_children_for_single_op()
    {
        service.single_op_and_ask_children_for_single_op();
    }



    // called from service
    single_op_and_ask_children_for_single_op_switch_id(Text switch_id)
    {
        print ('\nGot in partner caller\n');
        @partner.receive_single_op_and_ask_children_for_single_op_switch_id(switch_id);
        print ('\nFinished partner caller\n');
    }

    // called exclusively from partner
    receive_single_op_and_ask_children_for_single_op_switch_id(Text switch_id)
    {
        print ('\nReceived partner caller\n');
        service.single_op_and_ask_children_for_single_op_switch_id(switch_id);
        print ('\nFinished received partner caller\n');
    }


    // called from service
    insert_entry_on_all_switches_and_partners(Text ip_src)
    {
        @partner.receive_insert_entry_on_all_switches_and_partners(ip_src);
    }

    // called exclusively from partner
    receive_insert_entry_on_all_switches_and_partners(Text ip_src)
    {
        service.insert_entry_on_all_switches_and_partners(ip_src);
    }
    
}

